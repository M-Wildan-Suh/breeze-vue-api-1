import{T as b,r as i,d as g,m as k,h as t,f as S,w as Q,E as O,P as j,i as B,V as E,W as I}from"./index-c1909b7c.js";import{I as D}from"./vue-qrcode-reader-8adc1da8.js";const r=s=>(E("data-v-e5c35ddb"),s=s(),I(),s),R={class:"bg-white max-w-3xl mx-auto rounded-lg overflow-hidden !h-[calc(80vh)]"},F={class:"px-3 py-2 flex justify-between items-center"},V=r(()=>t("p",{class:"font-medium text-lg"},"Scan QR Code",-1)),M=r(()=>t("i",{class:"fa-solid fa-x"},null,-1)),q=[M],N=r(()=>t("div",{class:"bg-light-primary-2 rounded-full w-10 h-10 flex items-center justify-center"},[t("i",{class:"fa-solid fa-repeat"})],-1)),W=[N],P={class:"scan-confirmation w-full h-[calc(80vh-48px)] flex justify-center gap-1 items-center py-3 text-lg"},T=r(()=>t("i",{class:"fa-solid text-green-500 fa-circle-check"},null,-1)),$=r(()=>t("p",null,"Scan Qr Code Successfull",-1)),z=[T,$],A={__name:"QrChecker",props:{qr:Object,show:Object,checkQr:Function},setup(s){const d=s,n=i("environment"),u=i(!1),f=i(!1),l=i(!1),h=async()=>{switch(n.value){case"environment":n.value="user";break;case"user":n.value="environment";break}},m=async o=>{const e=n.value==="user",a=n.value==="environment",c=o.name==="OverconstrainedError";a&&c&&(u.value=!0),e&&c&&(f.value=!0),console.error(o)},_=async()=>{l.value=!1},p=async()=>{l.value=!0},v=async o=>{const e=o.map(c=>c.rawValue),a=new FormData;a.append("code",e),await d.checkQr(a)};function w(o,e){for(const a of o){const{boundingBox:{x:c,y:x,width:y,height:C}}=a;e.lineWidth=2,e.strokeStyle="#007bff",e.strokeRect(c,x,y,C)}}return(o,e)=>(g(),k("div",R,[t("div",F,[V,t("button",{onClick:e[0]||(e[0]=a=>s.show.value=!1),class:"rounded-full hover:bg-gray-100 w-8 h-8 flex items-center justify-center"},q)]),S(B(D),{constraints:{facingMode:n.value},onError:m,paused:s.qr.paused,onDetect:v,track:w,onCameraOn:_,onCameraOff:p},{default:Q(()=>[t("button",{type:"button",onClick:h,class:"absolute top-3 left-3"},W),O(t("div",P,z,512),[[j,l.value]])]),_:1},8,["constraints","paused"])]))}},J=b(A,[["__scopeId","data-v-e5c35ddb"]]);export{J as Q};
